# This is a basic workflow to help you get started with Actions
name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Set up gcloud Cloud SDK environment
        # You may pin to the exact commit or the version.
        # uses: google-github-actions/setup-gcloud@94337306dda8180d967a56932ceb4ddcf01edae7
        uses: google-github-actions/setup-gcloud@v0.2.0
        with:
          
          # Service account email address to use for authentication. This is required
          # for legacy .p12 keys but can be omitted for .json keys. This is usually of
          # the format <name>@<project-id>.iam.gserviceaccount.com.
          service_account_email: ${{ secrets.SERVICE_ACCOUNT_EMAIL }} # optional
          
          # Service account key to use for authentication. This should be the JSON
          # formatted private key which can be exported from the Cloud Console. The
          # value can be raw or base64-encoded.
          service_account_key: ${{ secrets.SERVICE_ACCOUNT_KEY }} # optional
          
          # ID of the Google Cloud project. If provided, this will configure gcloud to
          # use this project ID by default for commands. Individual commands can still
          # override the project using the --project flag which takes precedence.
          project_id: ${{ secrets.PROJECT_ID }} # optional
          
          # Export the provided credentials as Google Default Application Credentials.
          # This will make the credentials available to later steps via the
          # GOOGLE_APPLICATION_CREDENTIALS environment variable. Future steps that
          # consume Default Application Credentials will automatically detect and use
          # these credentials.
          export_default_credentials: true # optional



      # Runs a single command using the runners shell
      - name: Deploy the function
        run: gcloud functions deploy myfunc --trigger-http --runtime=python39
