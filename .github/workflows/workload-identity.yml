# This is a basic workflow to help you get started with Actions demo

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  
  workloadidentity:
    runs-on: ubuntu-latest
    # Add "id-token" with the intended permissions.
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    # actions/checkout MUST come before auth
    - uses: 'actions/checkout@v2'

    - id: 'auth'
      name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v0'
      with:
        workload_identity_provider: ' projects/439726687642/locations/global/workloadIdentityPools/gcloudpool//providers/gcloudproviders'
        service_account: 'sa-for-cloud-demo@cloud-demo-339414.iam.gserviceaccount.com'
    
    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1.3.2


    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init -reconfigure
      run: terraform init -reconfigure


    # Checks that all Terraform configuration files adhere to a canonical format
    #- name: Terraform Format
      #run: terraform fmt -check

    # Generates an execution plan for Terraform
    - name: Terraform Plan
      run: terraform plan

   # Apply an execution plan for Terraform  
    - name: Terraform Apply
      run: terraform apply -auto-approve
